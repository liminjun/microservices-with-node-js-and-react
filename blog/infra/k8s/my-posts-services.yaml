apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: "2023-05-19T05:15:33Z"
  generation: 4
  labels:
    app: my-posts-services
  name: my-posts-services
  namespace: default
  resourceVersion: "337484"
  uid: d8bb0d45-3f4a-4a51-b38c-025bc8d160c8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: my-posts-services
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2023-05-19T06:23:08Z"
      creationTimestamp: null
      labels:
        app: my-posts-services
    spec:
      containers:
      - image: registry.digitalocean.com/bage88/posts:1.1.0
        imagePullPolicy: Always
        name: posts
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-05-19T05:15:33Z"
    lastUpdateTime: "2023-05-19T07:06:00Z"
    message: ReplicaSet "my-posts-services-856c4b79f9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2023-05-20T04:59:58Z"
    lastUpdateTime: "2023-05-20T04:59:58Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
